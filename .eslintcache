[{"/Users/alexfirestone/projects/alex-one/alex-one-client/src/index.js":"1","/Users/alexfirestone/projects/alex-one/alex-one-client/src/App.js":"2","/Users/alexfirestone/projects/alex-one/alex-one-client/src/reportWebVitals.js":"3","/Users/alexfirestone/projects/alex-one/alex-one-client/src/Routes.js":"4","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Home.js":"5","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/About.js":"6","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/NotFound.js":"7","/Users/alexfirestone/projects/alex-one/alex-one-client/src/config.js":"8","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Login.js":"9","/Users/alexfirestone/projects/alex-one/alex-one-client/src/libs/contextLib.js":"10","/Users/alexfirestone/projects/alex-one/alex-one-client/src/libs/hooksLibs.js":"11","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Signup.js":"12","/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/AuthenticatedRoute.js":"13","/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/UnauthenticatedRoute.js":"14","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/ApiTest.js":"15","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/AddMovie.js":"16","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Movies.js":"17","/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/Card.js":"18","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Movie.js":"19","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/ChangeStatus.js":"20","/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/FormDialog.js":"21","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/EditMovie.js":"22"},{"size":912,"mtime":1608340534662,"results":"23","hashOfConfig":"24"},{"size":6767,"mtime":1621308236316,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608099771317,"results":"26","hashOfConfig":"24"},{"size":1794,"mtime":1620709623336,"results":"27","hashOfConfig":"24"},{"size":323,"mtime":1608100907755,"results":"28","hashOfConfig":"24"},{"size":243,"mtime":1608243521240,"results":"29","hashOfConfig":"24"},{"size":261,"mtime":1608243966015,"results":"30","hashOfConfig":"24"},{"size":372,"mtime":1620238412159,"results":"31","hashOfConfig":"24"},{"size":2972,"mtime":1609223078486,"results":"32","hashOfConfig":"24"},{"size":177,"mtime":1608340397401,"results":"33","hashOfConfig":"24"},{"size":1007,"mtime":1608966684103,"results":"34","hashOfConfig":"24"},{"size":6042,"mtime":1608961084741,"results":"35","hashOfConfig":"24"},{"size":553,"mtime":1608964658740,"results":"36","hashOfConfig":"24"},{"size":446,"mtime":1608964668568,"results":"37","hashOfConfig":"24"},{"size":1421,"mtime":1620244965729,"results":"38","hashOfConfig":"24"},{"size":4324,"mtime":1621308032315,"results":"39","hashOfConfig":"24"},{"size":4261,"mtime":1621302742411,"results":"40","hashOfConfig":"24"},{"size":1545,"mtime":1621308714271,"results":"41","hashOfConfig":"24"},{"size":3391,"mtime":1620713512709,"results":"42","hashOfConfig":"24"},{"size":566,"mtime":1620524257977,"results":"43","hashOfConfig":"24"},{"size":3458,"mtime":1620707136862,"results":"44","hashOfConfig":"24"},{"size":5013,"mtime":1620712868432,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"11g7ch",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"/Users/alexfirestone/projects/alex-one/alex-one-client/src/index.js",[],["99","100"],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/App.js",["101","102"],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/reportWebVitals.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/Routes.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Home.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/About.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/NotFound.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/config.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Login.js",["103","104","105","106"],"import React, { useState } from 'react';\nimport {FormControl, FormGroup, TextField, Input, InputLabel, Button} from \"@material-ui/core\";\nimport { Auth } from 'aws-amplify';\nimport useAppContext from '../libs/contextLib';\nimport { useHistory } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useFormFields } from '../libs/hooksLibs';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default function Login(){\n    const { userHasAuthenticated } = useAppContext();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = React.useState('');\n    const [fields, handleFieldChange] = useFormFields({\n        email: '',\n        password: ''\n    });\n\n    function validateForm(){\n        return fields.email.length > 0 && fields.password.length > 0;\n    }\n\n    async function handleSubmit(event){\n        event.preventDefault();\n        setIsLoading(true);\n\n        try{\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            history.push('/');\n        } catch(e) {\n            alert(e.message);\n            setIsLoading(false);\n\n        }\n\n    }\n\n\n    return(\n\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '60vh' }}\n        >\n\n            <Grid item xs={3}>\n            {isLoading ?\n                    <>\n                    <h1>Logging in...</h1>\n                    <CircularProgress/>\n                    <br/>\n                    <br/>\n                    </>\n                        :\n                    <>\n                    <h1>Login</h1>\n                    <FormControl>\n                    <InputLabel>Email</InputLabel>\n                    <Input\n                        type='email'\n                        autoFocus='true'\n                        id='email'\n                        value={fields.email}\n                        onChange={handleFieldChange}\n                        />\n                </FormControl>\n                <br/>\n                <br/>\n                <FormControl>\n                    <InputLabel>Password</InputLabel>\n                    <Input \n                        type='password'\n                        id='password'\n                        value={fields.password}\n                        onChange={handleFieldChange}\n\n                        />\n                </FormControl>\n                <br/>\n                <br/>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type='submit'\n                    disabled={!validateForm()}\n                    onClick={handleSubmit}\n\n                    >\n                        Login\n                </Button>\n                </>\n                }\n            </Grid>   \n\n        </Grid>\n    )\n\n}","/Users/alexfirestone/projects/alex-one/alex-one-client/src/libs/contextLib.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/libs/hooksLibs.js",["107"],"import React, { useEffect } from 'react';\n\nexport function useFormFields(initalState){\n    const [fields, setValues] = React.useState(initalState);\n\n    return [\n        fields,\n        function(event){\n            setValues({\n                ...fields,\n                [event.target.id]: event.target.value\n            });\n        }\n    ];\n}\n\n\nexport function useFetch(url, options){\n    const [response, setResponse] = React.useState(null);\n    const [error, setError] = React.useState(null);\n    const [isLoading, setIsloading] = React.useState(false);\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsloading(true);\n            try {\n                const res = await fetch(url, options);\n                const json = await res.json();\n                setResponse(json);\n                setIsloading(false);\n            } catch(error) {\n                setError(error);\n            }\n        };\n        fetchData();\n    }, []);\n    return { response, error, isLoading };\n};","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Signup.js",["108","109","110"],"import React, { useState } from 'react';\nimport { useFormFields } from '../libs/hooksLibs';\nimport { useHistory } from 'react-router-dom';\nimport useAppContext from '../libs/contextLib';\nimport {FormControl, FormGroup, TextField, Input, InputLabel, Button} from \"@material-ui/core\";\nimport { Auth } from 'aws-amplify';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function Signup(){\n    const [fields, handleFieldChange] = useFormFields({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        confirmationCode: '',\n    });\n\n    const history = useHistory()\n    const [newUser, setNewUser] = React.useState(null);\n    const { userHasAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(false);\n\n    function validateForm(){\n        return(\n            fields.email.length > 0 &&\n            fields.password.length > 0 &&\n            fields.confirmPassword === fields.password\n        );\n\n    }\n\n    function validateConfirmationForm(){\n        return fields.confirmationCode.length > 0;\n    }\n\n    async function handleSubmit(event){\n        event.preventDefault();\n        setIsLoading(true);\n\n        try{\n            const newUser = await Auth.signUp({\n                username: fields.email,\n                password: fields.password,\n            })\n            setIsLoading(false);\n            setNewUser(newUser);\n        } catch(e) {\n            alert(e.message);\n            setIsLoading(false);\n        }\n    }\n\n    async function handleConfirmationSubmit(event){\n        event.preventDefault();\n        setIsLoading(true);\n        try{\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            history.push('/');\n        } catch(e) {\n            alert(e.message);\n            setIsLoading(false);\n        }\n    }\n\n    function renderConfirmationForm(){\n        return(\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n\n                <Grid item xs={3}>\n                {isLoading ?\n                                <>\n                                    <h1>Verifying...</h1>\n                                    <CircularProgress/>\n                                    <br/>\n                                    <br/>\n                                </>\n                            :\n                             <>\n                                <h3>Please check your email for the code.</h3>\n                                <FormControl>\n                                    <InputLabel>Confirmation Code</InputLabel>\n                                    <Input\n                                        id='confirmationCode'\n                                        value={fields.confirmationCode}\n                                        onChange={handleFieldChange}\n                                    />\n                                </FormControl>\n                                <br/>\n                                <br/>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    type='submit'\n                                    disabled={!validateConfirmationForm()}\n                                    onClick={handleConfirmationSubmit}\n                                >\n                                    Verify\n                                </Button>\n                            </>}\n                </Grid>\n            </Grid>\n\n        )\n\n    }\n\n    function renderForm(){\n        return(\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\" \n                alignItems='center'\n                justify=\"center\"\n                style={{ minHeight: '10vh' }}\n            >\n\n        <Grid item xs={3}>\n        {isLoading ?\n                <>\n\n                    <h2>Registering your account...</h2> \n                    <CircularProgress/>\n                </> :\n                <>\n                    <h1>Sign Up</h1>\n                    <FormControl>\n                <InputLabel>Email</InputLabel>\n                <Input\n                    type='email'\n                    autoFocus='true'\n                    id='email'\n                    value={fields.email}\n                    onChange={handleFieldChange}\n                />\n            </FormControl>\n            <br/>\n            <br/>\n            <FormControl>\n                <InputLabel>Password</InputLabel>\n                <Input\n                    type='password'\n                    id='password'\n                    value={fields.password}\n                    onChange={handleFieldChange}\n                />\n            </FormControl>\n            <br/>\n            <br/>\n            <FormControl>\n                <InputLabel>Confirm Password</InputLabel>\n                <Input\n                    type='password'\n                    id='confirmPassword'\n                    value={fields.confirmPassword}\n                    onChange={handleFieldChange}\n                />\n            </FormControl>\n            <br/>\n            <br/>\n            <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type='submit'\n                    disabled={!validateForm()}\n                    onClick={handleSubmit}\n                    >\n                        Sign Up\n                </Button>\n                </>\n                }\n        </Grid>\n</Grid>\n        )\n    }\n\n    return(\n        <div>\n            <h1>Sign Up</h1>\n           {newUser === null ? renderForm(): renderConfirmationForm()}\n        </div>\n    )\n\n\n}","/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/AuthenticatedRoute.js",["111"],"import React from 'react';\nimport { Router, Redirect, useLocation, Route} from 'react-router-dom';\nimport useAppContext from '../libs/contextLib';\n\n\nexport default function AuthenticatedRoute({ children, ...rest}){\n\n    const { pathname, search } = useLocation();\n    const { isAuthenticated } = useAppContext();\n\n    return(\n        <Route {...rest}>\n            {isAuthenticated ? (\n                children\n            ) : (\n                <Redirect to={`/login?redirect=${pathname}${search}`}\n            />)\n            }\n        </Route>\n    );\n}","/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/UnauthenticatedRoute.js",["112","113","114"],"import React from 'react';\nimport { Router, Redirect, useLocation, Route} from 'react-router-dom';\nimport useAppContext from '../libs/contextLib';\n\n\nexport default function({ children, ...rest}) {\n    const { isAuthenticated } = useAppContext();\n\n    return(\n        <Route {...rest}>\n            {!isAuthenticated?\n            (\n                children\n            ):(\n                <Redirect to='/'/>\n            )}\n        </Route>\n    );\n}","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/ApiTest.js",[],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/AddMovie.js",["115","116","117","118"],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Movies.js",["119","120","121"],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/Card.js",["122","123"],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/Movie.js",["124","125","126"],"import React from 'react';\nimport './ApiTest.css';\nimport { useFetch } from '../libs/hooksLibs';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SimpleCard from '../components/Card.js';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom';\nimport AuthenticatedRoute from '../components/AuthenticatedRoute';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { api } from  '../config.js';\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport default function Movie() {\nconst { id, year} = useParams()\nconst { url, path } = useRouteMatch();\nconst [isLoading, setIsLoading] = React.useState('');\nconst history = useHistory();\nconsole.log('url', url)\nconsole.log('path', path)\n const fetchMovie = {\n        operation: \"read\",\n        payload: {\n          TableName: \"oscarMovies\",\n          Key: {\n\t\t\tid: id,\n\t\t\tyear: year\n\t\t}\n        }\n      }\n\n      function handleWatched(movie){\n        if(movie.watched){\n            return 'WATCHED'\n        }\n    return 'NOT WATCHED'\n    }\n\n\n    const res = useFetch(\"https://a9qr68a487.execute-api.us-east-1.amazonaws.com/Prod/MyResource\", {\n        method: 'post',\n        body: JSON.stringify(fetchMovie)\n      });\n    if (!res.response) {\n        return(\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n\n                <Grid item xs={3}>\n                    <CircularProgress/>\n                </Grid>\n\n            </Grid>\n        )\n    }\n    const movie = res.response.Item\n    console.log(movie);\n    async function handleDelete(){\n        await setIsLoading(true);\n        const deleteMovie = {\n            operation: \"delete\",\n            payload: {\n                TableName: \"oscarMovies\",\n                Key: {\n                    id: movie.id,\n                    year: movie.year\n                }\n            }\n        }\n        try{\n            await fetch(api.url, {\n                method: 'post',\n                body: JSON.stringify(deleteMovie)\n              }).then(function(response) {\n                console.log(response)\n                return response.json();\n              });\n          } catch(e) {\n            alert(e.message);\n            setIsLoading(false);\n        }\n        await setIsLoading(false);\n        history.push('/movies');\n\n    }\n    return(\n    <>\n        <h1 style={{\n            marginTop: 100,\n            textAlign: 'center',\n        }}>{movie.title}</h1>\n        <p style={{\n            textAlign: 'center',\n        }}>Year Released: <b>{movie.year}</b></p>\n        <p style={{\n            textAlign: 'center',\n        }}>STATUS: <b>{handleWatched(movie)}</b></p>\n\n        <div style={{\n            marginTop: 50,\n            display: 'flex',\n            justifyContent: 'center'\n        }}>\n            <IconButton aria-label=\"delete\" onClick={handleDelete}>\n                <DeleteIcon fontSize=\"large\" />\n            </IconButton>\n            <Button variant=\"outlined\" size=\"large\" color=\"primary\">\n            <Link to={`${url}/edit`}>Edit</Link>\n            </Button>\n        </div>\n    </>\n    );\n            }","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/ChangeStatus.js",["127","128","129","130","131","132","133","134","135"],"/Users/alexfirestone/projects/alex-one/alex-one-client/src/components/FormDialog.js",["136","137","138","139","140","141"],"import Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport React from 'react';\nimport {FormControl, FormGroup, Input, InputLabel, Select, MenuItem} from \"@material-ui/core\";\nimport { useFormFields } from '../libs/hooksLibs';\nimport { useFetch } from '../libs/hooksLibs';\nimport { api } from  '../config.js';\nimport { useHistory } from 'react-router-dom';\n\nexport default function FormDialog({year, id, ButtonTitle, currentStatus}) {\n  console.log(currentStatus);\n  const [open, setOpen] = React.useState(false);\n  const [status, setStatus] = React.useState(false);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = React.useState('');\n  const [fields, handleFieldChange] = useFormFields({\n      watched: null\n  });\n\n  const handleSwitchChange = (event) => {\n      setStatus(event.target.value);\n      fields.watched = event.target.value\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n\n    setOpen(false);\n  };\n\n  async function handleConfirm() {\n    await setIsLoading(true);\n    const updateMovie = {\n      operation: \"update\",\n      payload: {\n        TableName: \"oscarMovies\",\n        Key: {\n          id: id,\n          year: year\n        },\n        UpdateExpression: \"set watched=:w\",\n        ExpressionAttributeValues: {\n          \":w\" : fields.watched\n        },\n        ReturnValues: \"UPDATED_NEW\"\n      }\n    }\n    try{\n      await fetch(api.url, {\n          method: 'post',\n          body: JSON.stringify(updateMovie)\n        }).then(function(response) {\n          console.log(response)\n          return response.json();\n        });\n    } catch(e) {\n      alert(e.message);\n      setIsLoading(false);\n  }\n  await setIsLoading(false);\n  await setOpen(false);\n  await window.location.reload();\n  await history.push('/movies');\n\n  };\n\n  function handleWatched(currentStatus){\n    if(currentStatus === 'WATCHED'){\n        return true\n    }\nreturn false\n}\n\nlet currentValue = handleWatched(currentStatus)\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {ButtonTitle}\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">{ButtonTitle}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Change the status from NOT WATCHED to WATCHED after you see the movie.\n          </DialogContentText>\n          <FormControl>\n                <InputLabel id=\"label\">Status</InputLabel>\n                <Select labelId=\"label\" id=\"watched\" value={status} onChange={handleFieldChange && handleSwitchChange}>\n                    <MenuItem value={true}>Watched</MenuItem>\n                    <MenuItem value={false}>Not Watched</MenuItem>\n                </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/Users/alexfirestone/projects/alex-one/alex-one-client/src/containers/EditMovie.js",["142","143","144","145","146","147","148","149","150"],"import React from 'react';\nimport './ApiTest.css';\nimport { useFetch } from '../libs/hooksLibs';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SimpleCard from '../components/Card.js';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom';\nimport AuthenticatedRoute from '../components/AuthenticatedRoute';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { v4 as uuidv4 } from 'uuid';\nimport { api } from  '../config.js';\nimport { useFormFields } from '../libs/hooksLibs';\nimport {FormControl, FormGroup, TextField, Input, InputLabel, Select, MenuItem} from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport default function EditMovie() {\nconst { id, year} = useParams()\nconst { url, path } = useRouteMatch();\nconsole.log('url', url);\nconsole.log('path', path);\nconst [status, setStatus] = React.useState(false);\nconst history = useHistory();\nconst [isLoading, setIsLoading] = React.useState('');\nconst [fields, handleFieldChange] = useFormFields({\n    title: '',\n    year: '',\n    watched: null\n});\n\nconst handleSwitchChange = (event) => {\n    setStatus(event.target.value);\n    fields.watched = event.target.value\n  };\n\n\n\n const fetchMovie = {\n        operation: \"read\",\n        payload: {\n          TableName: \"oscarMovies\",\n          Key: {\n\t\t\tid: id,\n\t\t\tyear: year\n\t\t}\n        }\n      }\n\n      function handleWatched(movie){\n        if(movie.watched){\n            return 'WATCHED'\n        }\n    return 'NOT WATCHED'\n    }\n\n    const res = useFetch(\"https://a9qr68a487.execute-api.us-east-1.amazonaws.com/Prod/MyResource\", {\n        method: 'post',\n        body: JSON.stringify(fetchMovie)\n      });\n    \n    if (!res.response) {\n        return(\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n\n                <Grid item xs={3}>\n                    <CircularProgress/>\n                </Grid>\n\n            </Grid>\n        )\n    }\n    const movie = res.response.Item\n\n    async function handleSubmit(){\n        await setIsLoading(true);\n        const updateMovie = {\n            operation: \"update\",\n            payload: {\n              TableName: \"oscarMovies\",\n              Key: {\n                id: id,\n                year: year\n              },\n              UpdateExpression: \"set watched=:w, title=:t\",\n              ExpressionAttributeValues: {\n                \":w\" : fields.watched,\n                \":t\" : fields.title\n              },\n              ReturnValues: \"UPDATED_NEW\"\n            }\n          }\n          try{\n            await fetch(api.url, {\n                method: 'post',\n                body: JSON.stringify(updateMovie)\n              }).then(function(response) {\n                console.log(response)\n                return response.json();\n              });\n          } catch(e) {\n            alert(e.message);\n            setIsLoading(false);\n        }\n\n        await setIsLoading(false);\n        await history.push('/movies');\n\n    }\n\n    return(\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '60vh' }}\n        >\n\n            <Grid item xs={3}>\n                {isLoading ?\n                <>\n                <h1>Updating Movie...</h1>\n                <CircularProgress/>\n                <br/>\n                <br/>\n                </> :\n                <>\n                <h1>Update Movie</h1>\n                    <FormControl>\n                    <InputLabel>Movie Title</InputLabel>\n                    <Input\n                        type='text'\n                        autoFocus='true'\n                        id='title'\n                        defaultValue={movie.title}\n                        onChange={handleFieldChange}\n                        />\n                </FormControl>\n                <br/>\n                <br/>\n                <FormControl>\n                <InputLabel id=\"label\">Status</InputLabel>\n                <Select labelId=\"label\" id=\"watched\" value={status} onChange={handleFieldChange && handleSwitchChange}>\n                    <MenuItem value={true}>Watched</MenuItem>\n                    <MenuItem value={false}>Not Watched</MenuItem>\n                </Select>\n                </FormControl>\n                <br/>\n                <br/>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type='submit'\n                    onClick={handleSubmit}\n                    >\n                        Update\n                </Button>\n                    </>\n                }\n                </Grid>\n        </Grid>\n\n    );\n            }",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":16,"column":8,"nodeType":"157","messageId":"158","endLine":16,"endColumn":25},{"ruleId":"155","severity":1,"message":"159","line":18,"column":8,"nodeType":"157","messageId":"158","endLine":18,"endColumn":19},{"ruleId":"155","severity":1,"message":"160","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"161","line":2,"column":22,"nodeType":"157","messageId":"158","endLine":2,"endColumn":31},{"ruleId":"155","severity":1,"message":"162","line":2,"column":33,"nodeType":"157","messageId":"158","endLine":2,"endColumn":42},{"ruleId":"155","severity":1,"message":"163","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":35,"column":8,"nodeType":"166","endLine":35,"endColumn":10,"suggestions":"167"},{"ruleId":"155","severity":1,"message":"161","line":5,"column":22,"nodeType":"157","messageId":"158","endLine":5,"endColumn":31},{"ruleId":"155","severity":1,"message":"162","line":5,"column":33,"nodeType":"157","messageId":"158","endLine":5,"endColumn":42},{"ruleId":"155","severity":1,"message":"163","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":18},{"ruleId":"155","severity":1,"message":"168","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"168","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"169","line":2,"column":28,"nodeType":"157","messageId":"158","endLine":2,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":6,"column":1,"nodeType":"172","endLine":19,"endColumn":2},{"ruleId":"155","severity":1,"message":"173","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":18},{"ruleId":"155","severity":1,"message":"161","line":7,"column":22,"nodeType":"157","messageId":"158","endLine":7,"endColumn":31},{"ruleId":"155","severity":1,"message":"162","line":7,"column":33,"nodeType":"157","messageId":"158","endLine":7,"endColumn":42},{"ruleId":"155","severity":1,"message":"174","line":10,"column":16,"nodeType":"157","messageId":"158","endLine":10,"endColumn":29},{"ruleId":"155","severity":1,"message":"173","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":18},{"ruleId":"155","severity":1,"message":"175","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":26},{"ruleId":"155","severity":1,"message":"176","line":19,"column":9,"nodeType":"157","messageId":"158","endLine":19,"endColumn":18},{"ruleId":"155","severity":1,"message":"177","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":14},{"ruleId":"155","severity":1,"message":"178","line":30,"column":9,"nodeType":"157","messageId":"158","endLine":30,"endColumn":13},{"ruleId":"155","severity":1,"message":"179","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":18},{"ruleId":"155","severity":1,"message":"175","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":26},{"ruleId":"155","severity":1,"message":"176","line":20,"column":8,"nodeType":"157","messageId":"158","endLine":20,"endColumn":17},{"ruleId":"155","severity":1,"message":"180","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"173","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":18},{"ruleId":"155","severity":1,"message":"181","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":12},{"ruleId":"155","severity":1,"message":"182","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":24},{"ruleId":"155","severity":1,"message":"179","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":18},{"ruleId":"155","severity":1,"message":"183","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":14},{"ruleId":"155","severity":1,"message":"175","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":26},{"ruleId":"155","severity":1,"message":"184","line":14,"column":9,"nodeType":"157","messageId":"158","endLine":14,"endColumn":11},{"ruleId":"155","severity":1,"message":"185","line":14,"column":13,"nodeType":"157","messageId":"158","endLine":14,"endColumn":17},{"ruleId":"155","severity":1,"message":"162","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":17},{"ruleId":"155","severity":1,"message":"161","line":9,"column":22,"nodeType":"157","messageId":"158","endLine":9,"endColumn":31},{"ruleId":"155","severity":1,"message":"186","line":9,"column":33,"nodeType":"157","messageId":"158","endLine":9,"endColumn":38},{"ruleId":"155","severity":1,"message":"173","line":11,"column":10,"nodeType":"157","messageId":"158","endLine":11,"endColumn":18},{"ruleId":"155","severity":1,"message":"176","line":20,"column":10,"nodeType":"157","messageId":"158","endLine":20,"endColumn":19},{"ruleId":"155","severity":1,"message":"187","line":82,"column":5,"nodeType":"157","messageId":"158","endLine":82,"endColumn":17},{"ruleId":"155","severity":1,"message":"179","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":18},{"ruleId":"155","severity":1,"message":"183","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":14},{"ruleId":"155","severity":1,"message":"175","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":26},{"ruleId":"155","severity":1,"message":"188","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":18},{"ruleId":"155","severity":1,"message":"189","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":18},{"ruleId":"155","severity":1,"message":"190","line":12,"column":16,"nodeType":"157","messageId":"158","endLine":12,"endColumn":22},{"ruleId":"155","severity":1,"message":"161","line":15,"column":22,"nodeType":"157","messageId":"158","endLine":15,"endColumn":31},{"ruleId":"155","severity":1,"message":"162","line":15,"column":33,"nodeType":"157","messageId":"158","endLine":15,"endColumn":42},{"ruleId":"155","severity":1,"message":"191","line":52,"column":16,"nodeType":"157","messageId":"158","endLine":52,"endColumn":29},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'DirectionsCarIcon' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'useState' is defined but never used.","'FormGroup' is defined but never used.","'TextField' is defined but never used.","'ClipLoader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'options' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["194"],"'Router' is defined but never used.","'useLocation' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useFetch' is defined but never used.","'useRouteMatch' is defined but never used.","'AuthenticatedRoute' is defined but never used.","'isLoading' is assigned a value but never used.","'Button' is defined but never used.","'bull' is assigned a value but never used.","'SimpleCard' is defined but never used.","'React' is defined but never used.","'Grid' is defined but never used.","'CircularProgress' is defined but never used.","'Link' is defined but never used.","'id' is assigned a value but never used.","'year' is assigned a value but never used.","'Input' is defined but never used.","'currentValue' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'IconButton' is defined but never used.","'uuidv4' is defined but never used.","'handleWatched' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},"Update the dependencies array to be: [options, url]",{"range":"197","text":"198"},[957,959],"[options, url]"]